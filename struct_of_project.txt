проект состоит из трех библиотек 
    libraries/application
    libraries/functors
    libraries/repository
и главного приложения (main)
    sources

aplication - отвечает за каркас приложения, управление главным циклом исполнения команд и обработку ошибок. (главнй цикл)
functors - содержит код команд. отвечает за логику конкретных команд (бизнес логика).
repository - отвечает за загрузку\выгрузку и хранение изображений. (хранение изображений)
sources - содержит код запуска и настройки приложения. (инициализация и запуск приложения)

зависимости:
opencv last version (основная часть без расширений).
catch2 - unit tests framework (опционально, по умолчанию выключено)

сборка и запуск приложения:

git clone https://github.com/vitalyrb/improc.git
cd improc
mkdir build
cd build
cmake ..
make -j8
./sources/improc

если в корневом файле CMakeLists.txt
перевести соответствующие флаги (BUILD_UNIT_TESTING, RUN_UNIT_TESTS) в состояние ON,
то первый флаг заставит cmake при каждой сборке проекта собирать юнит тесты.
А второй флаг заставит ещё и запускать их автоматичеки после каждой сборки проекта(очень удобно).

option(BUILD_UNIT_TESTING "Enable unit tests building" OFF)//заменить  OFF на ON
option(RUN_UNIT_TESTS "Enable unit tests running after building." OFF)//заменить  OFF на ON

сами файлы тестов лежат всегда рядом с тестируемым кодом и имеют расширение *.cxx (test_<lib name>.cxx)
cmake сам обходит все библиотеки и собирает тесты в одну тестовою сборку run_unit_tests.


Я обычно дома работаю в Linux. Соответственно все проверил под этой ОС.
Но код кросплатформенный все должно собираться и работать на любой платформе c современным компиляиром С++.